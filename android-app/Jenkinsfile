pipeline {
  agent none

  stages {
    stage('Sync Android App Project') {
      agent any
      steps {
        sh 'rm -rf android-app && mkdir -p android-app'
        sh 'cp -r --no-preserve=mode,ownership,timestamps /workspace/android-app/. android-app/'
      }
    }

    stage('Build Android App and Archive APK') {
      agent {
        dockerfile {
          dir 'android-app'
          args '-u root:root --network host'
        }
      }

      stages {
        stage('Build APK') {
          steps {
            dir('android-app') {
              sh 'chmod +x gradlew'
              sh './gradlew clean assembleDebug'
            }
          }
        }

        stage('Run Android Tests') {
          // This 'when' block adds the conditional logic ⚙️
          when {
            expression {
              // This script checks for connected devices.
              // 'returnStatus: true' ensures the build doesn't fail if no devices are found;
              // it just returns the command's exit code.
              def adbCheck = sh(script: 'adb devices | grep -w "device"', returnStatus: true)
              
              // The 'grep' command returns 0 if it finds a match (a device).
              // The stage will only run if this expression is true.
              return adbCheck == 0
            }
          }
          steps {
            dir('android-app') {
              sh './gradlew connectedDebugAndroidTest'
            }
          }
        }

        stage('Archive APK') {
          steps {
            archiveArtifacts artifacts: 'android-app/app/build/outputs/apk/debug/*.apk', followSymlinks: false
          }
        }
      }
    }
  }
}
